name: Default Docker Image
on:
  workflow_dispatch:
    inputs:
      KS_VERSION:
        description: 'Katalon Studio version (e.g: "9.5.0")'
        required: true
      KS_VERSION_TAG:
        description: 'Docker image tag (e.g: "9.5.0")'
        required: true
      KS_VERSION_LATEST_TAG:
        description: 'Docker image latest tag (e.g: "9-latest")'
        required: false

jobs:
  run:
    name: Run
    runs-on: ubuntu-latest
    env:
        KS_VERSION: ${{ inputs.KS_VERSION }}
        KS_VERSION_TAG: ${{ inputs.KS_VERSION_TAG }}
        KS_VERSION_LATEST_TAG: ${{ inputs.KS_VERSION_LATEST_TAG }}
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Set up QEMU dependency
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Context for Buildx
      shell: bash
      run: |
        docker context create builders
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        version: latest
        endpoint: builders
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Prepare 
      run: |
        chmod u+x ./build/*.sh
        ./build/prevent_overwrite_existing_tag.sh $KS_VERSION_TAG
    - name:  Build
      run: |
        chmod u+x ./build/*.sh
        ./build/clean.sh $KS_VERSION
        ./build/build.sh $KS_VERSION $KS_VERSION_TAG $IS_RELEASE
    - name: Test
      run: | 
        chmod u+x ./test/project/*.sh
        cd $GITHUB_WORKSPACE/test/project && rm -rfv ./bin && ./run_chrome.sh $KS_VERSION ${{ secrets.API_KEY }}
        cd $GITHUB_WORKSPACE/test/project && rm -rfv ./bin && ./run_chrome_root.sh $KS_VERSION ${{ secrets.API_KEY }}
        cd $GITHUB_WORKSPACE/test/project && rm -rfv ./bin && ./run_chrome_advanced.sh $KS_VERSION ${{ secrets.API_KEY }}
        cd $GITHUB_WORKSPACE/test/project && rm -rfv ./bin && ./run_firefox.sh $KS_VERSION ${{ secrets.API_KEY }}
      continue-on-error: true
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    - name: Scan Security Vulnerabilities
      run: |
        chmod u+x ./build/security-report/security_scan.sh
        ./build/security-report/security_scan.sh $KS_VERSION_TAG  ${{ secrets.SNYK_AUTH_TOKEN }}
    - name: Upload reports
      run: |
        chmod u+x ./build/security-report/upload.sh
        ./build/security-report/upload.sh $KS_VERSION ${{ secrets.SEC_AWS_S3_BUCKET }} ${{ secrets.SEC_AWS_ACCESS_KEY_ID }} ${{ secrets.SEC_AWS_SECRET_ACCESS_KEY }}
