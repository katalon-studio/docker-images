name: "Push Docker Image to Docker Hub"

on:
  workflow_dispatch:
    inputs:
      SOURCE_REGISTRY:
        description: 'Source registry'
        required: true
        type: choice
        options:
          - ecr
          - dockerhub
        default: 'ecr'
      
      ORIGINAL_TAG:
        description: 'Original tag (e.g: "10.3.0", "10.3.0-slim", etc.)'
        required: true
        type: string

      TARGET_TAG:
        description: 'Target tag (e.g: "10-latest", "latest", etc.)'
        required: true
        type: string
      
permissions:
  id-token: write # This is required for requesting the JWT

env:
  ECR_IMAGE: 002582244933.dkr.ecr.us-east-1.amazonaws.com/katalon-studio
  DOCKERHUB_IMAGE: katalonstudio/katalon
  TARGET_IMAGE: katalonstudio/katalon # always push image to DockerHub

jobs:
  run:
    name: Run
    environment: prod
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        if: ${{ inputs.SOURCE_REGISTRY == 'ecr' }}
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::002582244933:role/katalon-github-oidc-federation
          role-session-name: github-actions
          aws-region: us-east-1
          mask-aws-account-id: "no"

      - name: Login to Amazon ECR
        if: ${{ inputs.SOURCE_REGISTRY == 'ecr' }}
        uses: aws-actions/amazon-ecr-login@v1

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set source image variable
        id: set_image
        run: |
          if [[ "${{ inputs.SOURCE_REGISTRY }}" == "ecr" ]]; then
            echo "SOURCE_IMAGE=${{ env.ECR_IMAGE }}" >> $GITHUB_OUTPUT
          else
            echo "SOURCE_IMAGE=${{ env.DOCKERHUB_IMAGE }}" >> $GITHUB_OUTPUT
          fi

      - name: Pull the original image
        run: docker pull ${{ steps.set_image.outputs.SOURCE_IMAGE }}:${{ inputs.ORIGINAL_TAG }}

      - name: Tag the original image to docker image target tag
        run: docker tag ${{ steps.set_image.outputs.SOURCE_IMAGE }}:${{ inputs.ORIGINAL_TAG }} ${{ env.TARGET_IMAGE }}:${{ inputs.TARGET_TAG }}

      - name: Push the image with target tag to DockerHub
        run: docker push ${{ env.TARGET_IMAGE }}:${{ inputs.TARGET_TAG }}
